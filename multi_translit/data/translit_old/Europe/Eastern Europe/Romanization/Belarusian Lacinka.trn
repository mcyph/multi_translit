# Translit auto-generated from E:\Dev\Flazzle\Flazzle\Romanization\BySound\Temp\Belarusian.txt version/date Łacinka (3.0)
# 3.0 Łacinka is a traditional Latin-script form of Belarusian. This version is based on the orthographic
# reform of the late 1930s formally established in a book on Belarusian orthography – Jazep Losik:
# Biełaruski pravapis, Minsk 1943.


﻿{{
FormatString: "Belarusian %s"
LFonts: ["Cyrillic", "Latin"]
LProvides: [
	["bel", "Cyrillic"],
	["bel", "Latin Łacinka"]]
LCreate: [true, true]
LTypes = [["input", "low"], ["disp", "low"]]
BothWays: 1
MatchCase: 1
}}

#provides("Belarusian %s Łacinka", "Cyrillic", "Latin")
#addISO("bel")
#addType("input", "low")
#addType("romanization", "low")
#useMatchCase()

# Form # 2: Used initially, after vowels and after ʼ.
if after($CYRILLICVOWELS||ʼ): е = allforms(je)
е = self(je), initial(je), medial(ie), final(ie)
# Form # 3: After л l.
if after(л): е = allforms(e)

# Form # 2: Used initially, after vowels and after ʼ.
if after($CYRILLICVOWELS||ʼ): ю = allforms(ju) # (3.1), (3.2)
ю = self(ju), initial(ju), medial(iu), final(iu)
# Form # 3: After л l.
if after(л): ю = allforms(u)

# Form # 2: Used initially, after vowels and after ʼ.
if after($CYRILLICVOWELS||ʼ): я = allforms(ja) # (3.1), (3.2)
я = self(ja), initial(ja), medial(ia), final(ia)
# Form # 3: After л l.
if after(л): я = allforms(a)

# Form # 2: Used initially, after vowels and after ʼ.
if after($CYRILLICVOWELS||ʼ): ё = allforms(jo) # (3.1), (3.2)
ё = self(jo), initial(jo), medial(io), final(io)
# Form # 3: After л l.
if after(л): ё = allforms(o)

# Form # 2: Used initially, after vowels and after ʼ.
if after($CYRILLICVOWELS||ʼ): й = allforms(ji) # (3.1)
й = self(ji), initial(ji), medial(j), final(j)

# 3.4 Indicates separate pronounciation of compound words, e.g. сямʼя siamja, абʼект abjekt.
’ = ignore() # (3.4)

# 3.3 Before е e, ё o, ю u, я a.
ле = allforms(le) # (3.3)
лё = allforms(lo) # (3.3)
лю = allforms(lu) # (3.3)
ля = allforms(la) # (3.3)
# Otherwise use the plain form
л = allforms(ł) # (3.3)

# 3.5 ь modifies the preceding consonant: дзь dź, зь ź, ль l, нь ń, сь ś, ць ć.
#ь = allforms(—) # (3.5)
дзь = allforms(dź) 
зь = allforms(ź)
ль = allforms(l)
нь = allforms(ń)
сь = allforms(ś)
ць = allforms(ć)

дж = allforms(dž)
дз = allforms(dz)
х = allforms(ch)
а = allforms(a)
б = allforms(b)
в = allforms(v)
г = allforms(h)
д = allforms(d)
ж = allforms(ž)
з = allforms(z)
к = allforms(k)
м = allforms(m)
н = allforms(n)
о = allforms(o)
п = allforms(p)
р = allforms(r)
с = allforms(s)
т = allforms(t)
у = allforms(u)
ф = allforms(f)
ц = allforms(c)
ч = allforms(č)
ш = allforms(š)
ы = allforms(y)
э = allforms(e)
і = allforms(i)
ў = allforms(ŭ)